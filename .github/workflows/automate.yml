name: CI/CI Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: loan_app
  ECS_CLUSTER: cluster1
  ECS_SERVICE: service1
  ECS_TASK_DEFINITION: task1
  CONTAINER_NAME: container1



jobs:
    test:
        name: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: "3.12"
            
            - name: Install Dependencies
              run: | 
                cd container
                python -m pip install --upgrade pip
                pip install pytest
                pip install -r requirements.txt

            - name: Run pytest
              run: |
                cd container
                pytest
    deploy:
        name: deploy
        runs-on: ubuntu-latest
        needs: test
        if: success()
        steps:
          - name: Checkout Code
            uses: actions/checkout@v2

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials
            with: 
              aws-access-key-id: ${{secrets.AWS_ACCESS_ID}}
              aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
              aws-region: ${{env.AWS_REGION}}

          - name: Login to AWS ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1
          
          - name: Build, Tag & Push Image to Amazon ECR
            id: build-image
            env: 
              ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
              IMAGE_TAG: ${{github.sha}}

            run: |
              cd container
              docker built -t $ECR_REGISTRY/$env.ECR_REPOSITORY:$IMAGE_TAG .
              docker push $ECR_REGISTRY/$env.ECR_REPOSITORY:$IMAGE_TAG
              echo "image=$ECR_REGISTRY/$env.ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
              
          - name: Fill in the new image id in AWS ECS Task Definition
            id: task-def
            uses: aws-actions/amazon-ecs-render-task-definition@id
            with:
              task-definition: ${{env.ECS_TASK_DEFINITION}}
              container-name: ${{env.CONTAINER_NAME}}
              image: ${{steps.build-image.outputs.image}}

          - name: Deploy AWS ECS Task Definition
            uses: aws-actions/amazon-ecs-deploy-task-definition@id
            with:
              task-definition : ${{steps.task-def.outputs.task-definition}}
              service: ${{env.ECS_SERVICE}}
              cluster: ${{env.ECS_CLUSTER}}
              wait-for-service-stability: true


# 1. .github/workflows must be in root directory so github action can auto track it
# 2. it will track any changes made in entire repo
# 3. path changed by cd is just to show where commands needs to be run wrt to presence of other files
# like our app file etc. But it tracks any changes in antire repo.
